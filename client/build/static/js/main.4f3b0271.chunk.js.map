{"version":3,"sources":["components/images/generic-avatar.png","components/Config.js","_actions/user_actions.js","_actions/types.js","hoc/auth.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/IntroPage/IntroPage.js","components/MovieApp/Main/Section/MovieLeftMenu.js","components/MovieApp/Common/GridCards.js","components/MovieApp/Common/MainImage.js","components/MovieApp/Main/MovieMainPage.js","components/MovieApp/Detail/Section/MovieInfo.js","components/MovieApp/Detail/Section/Favorite.js","components/MovieApp/Detail/MovieDetail.js","components/MovieApp/FavoriteMovie/FavoritePage.js","components/VideoApp/Main/Section/VideoLeftMenu.js","components/VideoApp/Main/VideoMainPage.js","components/VideoApp/UploadPage/Section/VideoForm.js","components/VideoApp/UploadPage/VideoUploadPage.js","components/VideoApp/VideoDetailPage/Section/SideVideo.js","components/VideoApp/VideoDetailPage/Section/LikeDislikes.js","components/VideoApp/VideoDetailPage/Section/SingleComment.js","components/VideoApp/VideoDetailPage/Section/ReplyComment.js","components/VideoApp/VideoDetailPage/Section/Comments.js","components/VideoApp/VideoDetailPage/Section/Subscribe.js","components/VideoApp/VideoDetailPage/VideoDetailPage.js","components/VideoApp/FavoriteVideo/FavoriteVideo.js","_actions/message_action.js","components/ChatbotApp/Section/Message.js","components/ChatbotApp/Section/Card.js","components/ChatbotApp/Section/Chatbot.js","components/ChatbotApp/ChatbotPage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/message_reducer.js","_reducers/user_reducer.js","index.js"],"names":["module","exports","API_URL","API_KEY","IMAGE_BASE_URL","auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","LandingPage","className","style","fontSize","float","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","useState","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","level","width","Item","prefix","color","placeholder","value","onChange","onBlur","border","padding","borderRadius","checked","href","htmlType","minWidth","disabled","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","image","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","onClick","SubMenu","Menu","MenuItemGroup","ItemGroup","LeftMenu","mode","key","title","userData","status","NavBar","visible","setVisible","position","zIndex","placement","closable","onClose","IntroPage","MovieLeftMenu","e","console","log","display","defaultSelectedKeys","selectedKeys","selectedKey","GridCards","MainPage","lg","md","movieId","height","src","alt","movieName","content","cast","original_name","character","trigger","characterName","MainImage","background","backgroundSize","backgroundPosition","maxWidth","bottom","marginLeft","text","MovieMainPage","MainMovieImage","setMainMovieImage","Movies","setMovies","CurrentPage","setCurrentPage","Mode","endPoint","fetchMovies","fromLoadMoreItem","fetch","res","json","results","page","loadMoreItems","LoadContent","backdrop_path","original_title","overview","margin","gutter","map","movie","index","poster_path","justifyContent","MovieInfo","bordered","release_date","revenue","runtime","vote_average","vote_count","popularity","Favorite","variables","userFrom","movieTitle","movieInfo","moviePost","movieRuntime","FavoriteNumber","setFavoriteNumber","Favorited","setFavorited","Axios","favoriteNumber","favorited","MovieDetail","match","params","Casts","setCasts","Movie","setMovie","ActorToggle","setActorToggle","endPointCrew","endPointInfo","Fragment","profile_path","emptyImage","FavoritePage","Favorites","setFavorites","fetchFavoredMovie","rederCards","favorites","Variables","onClickDelete","VideoLeftMenu","minHeight","Meta","Card","VideoMainPage","Video","setVideo","videos","renderCards","video","minutes","Math","floor","duration","seconds","_id","thumbnail","avatar","writer","description","views","createAt","format","TextArea","Input","Option","Select","PrivateOptions","CategoryOptions","VideoTitle","setVideoTitle","Descript","setDescript","Private","setPrivate","Category","setCategory","currentTarget","item","size","preventDefault","privacy","filePath","catecory","ThumbnailPaths","thumbNailIndex","current","message","VideoUploadPage","LoadingIcon","setLoadingIcon","setThumbnailPaths","setThumbnailPath","FilePath","setFilePath","Duration","setDuration","useRef","useCallback","ThumbNail","length","alignItems","tip","spinning","afterChange","ThumbnailPath","textAlign","marginBottom","onDrop","files","formData","FormData","append","header","variable","url","fileName","fileDuration","getRootProps","getInputProps","SideVideo","SideVideos","setSideVideos","renderSideVideo","marginRight","mairginTop","LikeDislikes","Likes","setLikes","LikeAction","setLikeAction","Dislikes","setDislikes","DislikeAction","setDislikeAction","videoId","commentId","likes","like","dislikes","dislike","theme","paddingLeft","cursor","SingleComment","OpenReply","setOpenReply","CommentValue","setCommentValue","commentVariables","responseTo","comment","postId","refreshFunction","result","actions","datetime","author","ReplyComment","parentCommentId","ChildCommentCount","setChildCommentCount","OnToggle","setOnToggle","commentCount","commentLists","EnterOutlined","transform","comments","Subscribe","Subscribed","setSubscribed","SubscribeNumber","setSubscribeNumber","userTo","subscribeNumber","subscribeVariable","subscribed","backgroundColor","fontWeight","textTransform","VideoDetailPage","VideoDetail","setVideoDetail","Comment","setComment","videoDetail","subscribeButton","controls","newComments","concat","FavoriteVideo","favoriteVideo","setFavoriteVideo","favoriteVideos","mergedList","likeList","countList","obj","find","likeCount","count","IconText","icon","React","createElement","RenderList","itemLayout","dataSource","footer","renderItem","LikeOutlined","MessageOutlined","extra","saveMessage","Message","AvatarSrc","who","CardComponent","cover","cardInfo","fields","stringValue","target","rel","link","stack","Chatbot","savedMessages","messages","eventQuery","textQuery","a","textQueryVariables","fulfillmentMessages","event","eventQueryVariables","overflow","i","card","overflowX","cards","listValue","structValue","renderOneMessage","renderMessage","onKeyPress","ChatbotPage","marginTop","App","fallback","paddingTop","exact","path","component","Auth","LoginPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f3b0271.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/generic-avatar.9e1efe36.png\";","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n\n//Api config\nexport const API_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = '3ee268c666c2a0ab292f5ed5c2aa1a4e'\nexport const IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\nexport const SAVE_MESSAGE = 'save_message';\nexport const CLEAR_MESSAGE = 'clear_message';","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import React from 'react'\nimport { FaCode } from \"react-icons/fa\";\n\nfunction LandingPage() {\n    return (\n        <>\n            <div className=\"app\">\n                <FaCode style={{ fontSize: '4rem' }} /><br />\n                <span style={{ fontSize: '2rem' }}>Let's Start Coding!</span>\n            </div>\n            <div style={{ float: 'right' }}>Thanks For Using This Boiler Plate by John Ahn</div>\n        </>\n    )\n}\n\nexport default LandingPage\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n      <Menu.Item key=\"home\">\n        <a href=\"/\">Home</a>\n      </Menu.Item>\n      <Menu.Item key=\"intro\">\n        <a href=\"/intro\">Intro</a>\n      </Menu.Item>\n      <SubMenu title={<span>Project</span>}>\n        <MenuItemGroup title=\"React\">\n          <Menu.Item key=\"setting:1\"><a href=\"/MovieApp\">Movie App</a></Menu.Item>\n          <Menu.Item key=\"setting:2\"><a href=\"/VideoApp\">Video App</a></Menu.Item>\n          <Menu.Item key=\"setting:3\"><a href=\"/chatbot\">Chatbot App</a></Menu.Item>\n        </MenuItemGroup>\n        {/* <MenuItemGroup title=\"Item 2\">\n          <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n          <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n        </MenuItemGroup> */}\n      </SubMenu>\n    </Menu>\n  )\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">Logo</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\r\n\r\nfunction IntroPage() {\r\n    return (\r\n        <div>\r\n            IntroPage\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IntroPage\r\n","import React from 'react'\r\nimport { Menu } from 'antd';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nfunction MovieLeftMenu(props) {\r\n    const handleClick = e => {\r\n        console.log('click ', e);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Menu\r\n                onClick={handleClick}\r\n                style={{ width: 200, display: 'block' }}\r\n                defaultSelectedKeys={['1']}\r\n                selectedKeys={props.selectedKey ? props.selectedKey : ['1']}\r\n                mode=\"inline\"\r\n            >\r\n                <Menu.Item key=\"1\">\r\n                    <a href=\"/MovieApp\">MovieApp</a>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\">\r\n                    <a href=\"/movie/favorite\">Favorite Movies</a>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"3\">\r\n                    Option 3\r\n          </Menu.Item>\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieLeftMenu\r\n","import React from 'react'\r\nimport { Col, Popover } from 'antd'\r\n\r\nfunction GridCards(props) {\r\n    console.log(props.image)\r\n\r\n\r\n\r\n    //메인페이지에서 불러왔을 경우\r\n    if (props.MainPage) {\r\n        return (\r\n            <div>\r\n                <Col lg={6} md={8} xs={24}>\r\n                    <div style={{ position: 'relative' }}>\r\n                        <a href={`/movie/detail_${props.movieId}`} >\r\n                            <img style={{ width: '100%', height: '400px' }} src={props.image} alt={props.movieName} />\r\n                        </a>\r\n                    </div>\r\n                </Col>\r\n            </div>\r\n        )\r\n    } else { // 그 외에서 컴포넌트를 불러왔을 경우\r\n        const content = (<div>\r\n            Actor : {props.cast.original_name}<br />\r\n            Charactor : {props.cast.character}\r\n        </div>)\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Col lg={6} md={8} xs={24}>\r\n                        <div style={{ position: 'relative' }}>\r\n                            <Popover content={content} title=\"Actor Info\" trigger=\"hover\" placement=\"rightTop\">\r\n                                <img style={{ width: '100%', height: '400px' }} src={props.image} alt={props.cast.characterName} />\r\n                            </Popover>\r\n                        </div>\r\n                    </Col>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default GridCards\r\n","import React from 'react'\r\n\r\nfunction MainImage(props) {\r\n    return (\r\n        <div style={{\r\n            background: `linear-gradient(to bottom, rgba(0,0,0,0)\r\n                39%, rgba(0,0,0,0)\r\n                41%, rgba(0,0,0,0.65)\r\n                100%),\r\n                url('${props.image}'), #1c1c1c`,\r\n            height: '500px',\r\n            backgroundSize: '100%, cover',\r\n            backgroundPosition: 'center, center',\r\n            width: '100%',\r\n            position: 'relative'\r\n        }}>\r\n            <div>\r\n                <div style={{ position: 'absolute', maxWidth: '500px', bottom: '2rem', marginLeft: '2rem' }}>\r\n                    <h2 style={{ color: 'white' }}> {props.title}</h2>\r\n                    <p style={{ color: 'white', fontSize: '1rem' }}> {props.text}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainImage\r\n","import React, { useState, useEffect } from 'react'\r\nimport MovieLeftMenu from './Section/MovieLeftMenu'\r\nimport { Row, Button } from 'antd'\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from \"../../Config\"\r\nimport GridCards from '../Common/GridCards';\r\nimport MainImage from '../Common/MainImage';\r\n\r\n\r\nfunction MovieMainPage() {\r\n    const [MainMovieImage, setMainMovieImage] = useState(null)\r\n    const [Movies, setMovies] = useState([])\r\n    const [CurrentPage, setCurrentPage] = useState(0)\r\n    const [Mode, setMode] = useState('home')\r\n\r\n\r\n    useEffect(() => {\r\n        //api\r\n        const endPoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en_US&page=1`;\r\n        fetchMovies(endPoint, true);\r\n    }, [])\r\n\r\n    const fetchMovies = (endPoint, fromLoadMoreItem) => {\r\n        fetch(endPoint).then(res => res.json())\r\n            .then(\r\n                res => {\r\n                    console.log(res.results)\r\n                    setMainMovieImage(MainMovieImage || res.results[0]);\r\n                    setMovies([...Movies, ...res.results]);\r\n                    setCurrentPage(res.page)\r\n                    console.log('Movies', Movies)\r\n                })\r\n    }\r\n\r\n    const loadMoreItems = () => {\r\n        const endPoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en_US&page=${CurrentPage + 1}`;\r\n        fetchMovies(endPoint)\r\n    }\r\n\r\n    const LoadContent = () => {\r\n        if (Mode === 'home') {\r\n            return (\r\n                <>\r\n                    {MainMovieImage && <MainImage\r\n                        image={`${IMAGE_BASE_URL}w1280${MainMovieImage.backdrop_path}`}\r\n                        title={MainMovieImage.original_title}\r\n                        text={MainMovieImage.overview}\r\n                    />}\r\n                    <div style={{ width: '90%', margin: '1rem auto' }}>\r\n\r\n                        <h2>Movie by latest</h2>\r\n                        <Row gutter={[16, 16]}>\r\n                            {Movies && Movies.map((movie, index) => (\r\n                                <GridCards key={movie.id} MainPage image={movie.poster_path ? `${IMAGE_BASE_URL}w500${movie.poster_path}` : null} movieId={movie.id} movieName={movie.original_title} />\r\n                            ))}\r\n                        </Row>\r\n                        <hr />\r\n\r\n\r\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                            <Button onClick={loadMoreItems}> Load More</Button>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={{ display: 'flex' }}>\r\n                <div style={{ position: 'fixed' }}>\r\n                    <MovieLeftMenu />\r\n                </div>\r\n                {/* fixed를 위한 영역가드 */}\r\n                <div style={{ minWidth: '200px' }}>\r\n                </div>\r\n                <div style={{ width: '90%', margin: '10px 10px' }}>\r\n                    <LoadContent />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieMainPage\r\n","import React from 'react'\r\nimport { Descriptions, Badge } from 'antd'\r\n\r\nfunction MovieInfo(props) {\r\n    let { movie } = props\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Descriptions title=\"Movie info\" bordered>\r\n                    <Descriptions.Item label=\"Title\">{movie.original_title}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"release_date\">{movie.release_date}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"revenue\">{movie.revenue}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"runtime\">{movie.runtime}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"vote_average\" span={2}>{movie.vote_average}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"vote_count\">{movie.vote_count}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"status\">{movie.status}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"popularity\">{movie.popularity}</Descriptions.Item>\r\n                </Descriptions>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfo\r\n","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport { Button } from 'antd'\r\n\r\n\r\nfunction Favorite(props) {\r\n    const { movieId, userFrom } = props;\r\n    const movieTitle = props.movieInfo.title\r\n    const moviePost = props.movieInfo.backdrop_path\r\n    const movieRuntime = props.movieInfo.runtime\r\n\r\n    let variables = {\r\n        userFrom, movieId, movieTitle, moviePost, movieRuntime\r\n    }\r\n\r\n    const [FavoriteNumber, setFavoriteNumber] = useState(0);\r\n    const [Favorited, setFavorited] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        Axios.post('/api/movieApp/favoriteNumber', variables).then(res => {\r\n\r\n            if (res.data.success) {\r\n                console.log('좋아요갯수', res.data.favoriteNumber);\r\n                setFavoriteNumber(res.data.favoriteNumber)\r\n            } else {\r\n                alert('숫자 정보를 가져오는데 실패했습니다.');\r\n            }\r\n        })\r\n\r\n        Axios.post('/api/movieApp/favorited', variables).then(res => {\r\n\r\n            if (res.data.success) {\r\n                console.log('좋아요상태', res.data)\r\n                setFavorited(res.data.favorited);\r\n                console.log(Favorited);\r\n            } else {\r\n                alert('정보를 가져오는데 실패했습니다.');\r\n            }\r\n        })\r\n\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    const onClickFavorite = () => {\r\n        if (Favorited) {\r\n            Axios.post('/api/movieApp/removeFromFavorite', variables).then(res => {\r\n                if (res.data.success) {\r\n                    setFavoriteNumber(FavoriteNumber - 1);\r\n                    setFavorited(!Favorited)\r\n                } else {\r\n                    alert('Favorite 리스트에서 지우는 걸 실패했습니다.')\r\n                }\r\n            })\r\n        } else {\r\n            console.log(props.movieInfo);\r\n            Axios.post('/api/movieApp/addToFavorite', variables).then(res => {\r\n                if (res.data.success) {\r\n                    setFavoriteNumber(FavoriteNumber + 1);\r\n                    setFavorited(!Favorited)\r\n                } else {\r\n                    alert('Favorite 리스트에서 c 걸 실패했습니다.')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={onClickFavorite}>{Favorited ? 'Favorited' : 'Not Favorited'} | {FavoriteNumber}</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favorite\r\n","import React, { useEffect, useState } from 'react'\r\nimport MovieLeftMenu from '../Main/Section/MovieLeftMenu'\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from '../../Config';\r\nimport MainImage from '../Common/MainImage';\r\nimport MovieInfo from './Section/MovieInfo';\r\nimport { Row, Button } from 'antd'\r\nimport GridCards from '../Common/GridCards';\r\nimport Favorite from './Section/Favorite';\r\nimport emptyImage from '../../images/generic-avatar.png'\r\n\r\nfunction MovieDetail(props) {\r\n    //url 파라미터로 받아온 movieId\r\n    let movieId = props.match.params.movieId\r\n    const [Casts, setCasts] = useState([])\r\n    const [Movie, setMovie] = useState([])\r\n    const [ActorToggle, setActorToggle] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let endPointCrew = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`\r\n        let endPointInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}`\r\n\r\n        fetch(endPointInfo)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setMovie(res);\r\n            })\r\n\r\n        fetch(endPointCrew)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log('responesCrew', res)\r\n                setCasts(res.cast);\r\n            })\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    const toggleActorView = () => {\r\n        setActorToggle(!ActorToggle);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={{ display: 'flex' }}>\r\n                <MovieLeftMenu />\r\n                <div style={{ width: '90%', margin: '10px 10px' }}>\r\n                    {/* Header */}\r\n                    <MainImage\r\n                        image={`${IMAGE_BASE_URL}w1280${Movie.backdrop_path}`}\r\n                        title={Movie.original_title}\r\n                        text={Movie.overview}\r\n\r\n                    />\r\n                    {/* Body */}\r\n                    <div style={{ width: '85%', margin: '1rem auto' }}>\r\n                        {/* favorite */}\r\n                        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                            <Favorite movieInfo={Movie} movieId={movieId} userFrom={localStorage.getItem('userId')} />\r\n                        </div>\r\n                        {/* MovieInfo */}\r\n                        <MovieInfo movie={Movie} />\r\n                        {/* actorInfo */}\r\n                        <div style={{ display: 'flex', justifyContent: 'center', margin: '2rem' }}>\r\n                            <Button onClick={toggleActorView}>Toggle Actor View</Button>\r\n                        </div>\r\n                        {ActorToggle &&\r\n                            <Row gutter={[16, 16]}>\r\n                                {Casts && Casts.map((cast, index) => (\r\n                                    <React.Fragment key={index}>\r\n                                        <GridCards\r\n                                            image={cast.profile_path ? `${IMAGE_BASE_URL}w500${cast.profile_path}` : emptyImage}\r\n                                            cast={cast}\r\n                                        >\r\n                                        </GridCards>\r\n                                    </React.Fragment>\r\n                                ))}\r\n\r\n                            </Row>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieDetail\r\n","import React, { useState, useEffect } from 'react'\r\nimport MovieLeftMenu from '../Main/Section/MovieLeftMenu'\r\nimport './favorite.css';\r\nimport { Popover } from 'antd'\r\nimport { IMAGE_BASE_URL } from '../../Config'\r\nimport { Button } from 'antd'\r\nimport Axios from 'axios'\r\n\r\n\r\nfunction FavoritePage() {\r\n\r\n    const [Favorites, setFavorites] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchFavoredMovie();\r\n\r\n    }, [])\r\n\r\n    const fetchFavoredMovie = () => {\r\n        Axios.post('/api/movieApp/getFavoredMovie', { userFrom: localStorage.getItem('userId') }).then(res => {\r\n            if (res.data.success) {\r\n                console.log(res.data)\r\n                setFavorites(res.data.results);\r\n            } else {\r\n                alert('영화 정보를 가져오는데 실패 했습니다.')\r\n            }\r\n        })\r\n    }\r\n\r\n    const onClickDelete = (movieId, userFrom) => {\r\n        const Variables = {\r\n            movieId, userFrom\r\n        }\r\n\r\n        Axios.post('/api/movieApp/removeFromFavorite', Variables).then(res => {\r\n            if (res.data.success) {\r\n                fetchFavoredMovie();\r\n            } else {\r\n                alert(\"리스트를 지우는데 실패했습니다.\")\r\n            }\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    const rederCards = Favorites.map((favorites, index) => {\r\n\r\n        const content = (\r\n            <div>\r\n                {favorites.moviePost ?\r\n                    <img src={`${IMAGE_BASE_URL}w500${favorites.moviePost}`} /> : \"NO IMAGE\"\r\n                }\r\n            </div>\r\n\r\n        )\r\n\r\n        return <tr key={index}>\r\n            <Popover content={content} title={`${favorites.movieTitle}`}>\r\n                <td>{favorites.movieTitle}</td>\r\n            </Popover>\r\n            <td>{favorites.movieRuntime}</td>\r\n            <td><Button onClick={() => onClickDelete(favorites.movieId, favorites.userFrom)}>Remove</Button></td>\r\n        </tr>\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            <div style={{ position: 'fixed' }}>\r\n                <MovieLeftMenu selectedKey={'2'} />\r\n            </div>\r\n            {/* fixed를 위한 영역가드 */}\r\n            <div style={{ minWidth: '200px' }}>\r\n            </div>\r\n            <div style={{ width: '85%', margin: '3rem auto' }}>\r\n                <h2> Favorite Movies</h2>\r\n                <hr />\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Movie Title</th>\r\n                            <th>Movie Runtime</th>\r\n                            <th>Remove From Favorites</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {rederCards}\r\n                    </tbody>\r\n\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoritePage\r\n","import React from 'react'\r\nimport { Menu } from 'antd';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nfunction VideoLeftMenu(props) {\r\n    const handleClick = e => {\r\n        console.log('click ', e);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Menu\r\n                onClick={handleClick}\r\n                style={{ width: 200, display: 'block', minHeight: '700px' }}\r\n                defaultSelectedKeys={['1']}\r\n                selectedKeys={props.selectedKey ? props.selectedKey : ['1']}\r\n                mode=\"inline\"\r\n            >\r\n                <Menu.Item key=\"1\">\r\n                    <a href=\"/VideoApp\">Video</a>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\">\r\n                    <a href=\"/video/videoupload\">Upload Video</a>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"3\">\r\n                    <a href=\"/video/favoritevideo\">Favorite Video</a>\r\n                </Menu.Item>\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VideoLeftMenu\r\n","import React, { useEffect, useState } from 'react'\r\nimport VideoLeftMenu from './Section/VideoLeftMenu'\r\nimport { Row, Col, Typography, Card, Avatar, Icon } from 'antd'\r\nimport Axios from 'axios'\r\nimport moment from 'moment';\r\nconst { Title } = Typography;\r\nconst { Meta } = Card;\r\n\r\n\r\nfunction VideoMainPage() {\r\n    const [Video, setVideo] = useState([])\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/video/getVideos').then((res) => {\r\n            if (res.data.success) {\r\n                setVideo(res.data.videos)\r\n            } else {\r\n                alert(\"비디오 목록을 가져오는데 실패하였습니다.\")\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const renderCards = Video.map((video, index) => {\r\n        var minutes = Math.floor(video.duration / 60);\r\n        var seconds = Math.floor((video.duration - minutes * 60))\r\n        return (\r\n            <Col key={index} lg={6} md={8} xs={24}>\r\n                <div style={{ position: 'relative' }}>\r\n                    <a href={`/video/detail_${video._id}`}>\r\n                        <img style={{ width: '100%' }} src={`http://localhost:5000/${video.thumbnail}`} />\r\n                        <div className=\"duration\">\r\n                            <span> {minutes} : {seconds}</span>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                <br />\r\n                <Meta\r\n                    avatar={\r\n                        <Avatar src={video.writer.image} />\r\n                    }\r\n                    title={video.title}\r\n                    description=\"\" />\r\n                <span>{video.writer.name}</span><br />\r\n                <span style={{ marginLeft: '3rem' }}>{video.views} views</span> - <span>{moment(video.createAt).format(\"MMM Do YY\")}</span>\r\n            </Col>\r\n\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div style={{ display: 'flex' }}>\r\n                <div style={{ position: 'fixed' }}>\r\n                    <VideoLeftMenu />\r\n                </div>\r\n                {/* fixed를 위한 영역가드 */}\r\n                <div style={{ minWidth: '200px' }}>\r\n                </div>\r\n                <div style={{ width: '85%', margin: '3rem auto' }}>\r\n                    <Title level={2}> Recommended</Title>\r\n                    <hr />\r\n                    <Row gutter={[32, 16]}>\r\n                        {renderCards}\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VideoMainPage\r\n","import React, { useState } from 'react'\r\nimport { Input, Select, Button, message } from 'antd'\r\nimport Axios from 'axios'\r\nimport { useSelector } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\n\r\nconst PrivateOptions = [\r\n    { value: 0, label: 'Private' },\r\n    { value: 1, label: 'Public' }\r\n]\r\n\r\nconst CategoryOptions = [\r\n    { value: 0, label: \"Film & Animation\" },\r\n    { value: 1, label: \"Autos & Vehicles\" },\r\n    { value: 2, label: \"Music\" },\r\n    { value: 3, label: \"Pets & Animals\" }\r\n]\r\n\r\n\r\n\r\nfunction VideoForm(props) {\r\n    const user = useSelector(state => state.user)\r\n    const [VideoTitle, setVideoTitle] = useState(\"\")\r\n    const [Descript, setDescript] = useState(\"\")\r\n    const [Private, setPrivate] = useState([])\r\n    const [Category, setCategory] = useState([])\r\n\r\n    const onChangeTitle = (e) => {\r\n        setVideoTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onChangeDescript = (e) => {\r\n        setDescript(e.currentTarget.value)\r\n    }\r\n\r\n    const onPrivateChange = (value) => {\r\n        setPrivate(value)\r\n    }\r\n\r\n    const onCategoryChange = (value) => {\r\n        setCategory(value);\r\n\r\n    }\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(user.userData._id)\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            title: VideoTitle,\r\n            description: Descript,\r\n            privacy: Private,\r\n            filePath: props.filePath,\r\n            catecory: Category,\r\n            duration: props.duration,\r\n            thumbnail: props.ThumbnailPaths[props.thumbNailIndex.current]\r\n        }\r\n\r\n        Axios.post('/api/video/uploadVideo', variables).then(res => {\r\n            if (res.data.success) {\r\n                console.log(res.data)\r\n                message.success('성공적으로 업로드를 완료했습니다.')\r\n                props.history.push('/')\r\n            } else {\r\n                alert(\"비디오 저장에 실패했습니다.\")\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label>Title</label>\r\n            <Input onChange={onChangeTitle}\r\n                value={VideoTitle} />\r\n            <br />\r\n            <br />\r\n            <label>Description</label>\r\n            <TextArea\r\n                onChange={onChangeDescript} value={Descript}\r\n            />\r\n            <br />\r\n            <br />\r\n            <Select onChange={onPrivateChange}>\r\n                {PrivateOptions.map((item, index) => (\r\n                    <Option key={index} value={item.value}>{item.label}</Option>\r\n                ))}\r\n\r\n            </Select>\r\n            <br />\r\n            <br />\r\n            <Select onChange={onCategoryChange}>\r\n                {CategoryOptions.map((item, index) => (\r\n                    <Option key={index} value={item.value}>{item.label}</Option>\r\n                ))}\r\n\r\n            </Select>\r\n            <br />\r\n            <br />\r\n            <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                Submit\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(VideoForm)\r\n","import React, { useState, useCallback, useRef } from 'react'\r\nimport VideoLeftMenu from '../Main/Section/VideoLeftMenu'\r\nimport { Typography, Form, Icon, Spin, Carousel, Input, Button, Select } from 'antd'\r\nimport Dropzone from 'react-dropzone';\r\nimport Axios from 'axios';\r\nimport VideoForm from './Section/VideoForm';\r\n\r\nconst { Title } = Typography;\r\n\r\n\r\nfunction VideoUploadPage() {\r\n    const [LoadingIcon, setLoadingIcon] = useState(false);\r\n    const [ThumbnailPaths, setThumbnailPaths] = useState(\"\");\r\n    const [ThumbnailPath, setThumbnailPath] = useState(\"\");\r\n    const [FilePath, setFilePath] = useState(\"\");\r\n    const [Duration, setDuration] = useState(\"\");\r\n    const thumbNailIndex = useRef(0)\r\n\r\n    const onDrop = (files) => {\r\n        console.log(files);\r\n        let formData = new FormData;\r\n        const config = {\r\n            header: { 'content-type': 'multiple/form-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n\r\n        //비디오 업로드 요청\r\n        Axios.post('/api/video/uploadfiles', formData, config).then(res => {\r\n            if (res.data.success) {\r\n                console.log(res.data)\r\n\r\n                //업로드 된 비디오의 정보\r\n                let variable = {\r\n                    url: res.data.url,\r\n                    fileName: res.data.fileName\r\n                }\r\n\r\n                setFilePath(res.data.url);\r\n                setLoadingIcon(true);\r\n\r\n                //업로드된 비디오의 정보를 가지고 썸네일 생성요청\r\n                Axios.post('/api/video/thumbnail', variable).then(res => {\r\n                    if (res.data.success) {\r\n                        console.log('썸네일 정보', res.data)\r\n                        setDuration(res.data.fileDuration);\r\n                        setThumbnailPaths(res.data.url);\r\n                        setThumbnailPath(res.data.url[0])\r\n                        setLoadingIcon(false);\r\n                    } else {\r\n                        alert('썸네일 생성 실패');\r\n                        setLoadingIcon(false);\r\n                    }\r\n                })\r\n\r\n            } else {\r\n                alert('비디오 업로드를 실패했습니다.')\r\n            }\r\n        })\r\n    }\r\n\r\n    const onChange = useCallback((index) => {\r\n        thumbNailIndex.current = index\r\n    }, [])\r\n\r\n\r\n    const ThumbNail = () => {\r\n        if (ThumbnailPaths.length === 0) {\r\n            return (<div style={{ marginLeft: '5px', border: \"1px solid lightgray\", width: '300px', height: '240px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spin tip=\"Creating Thumbnails\" spinning={LoadingIcon}></Spin>\r\n            </div>)\r\n        } else {\r\n            return (<Carousel style={{ width: '300px', height: '240px', marginLeft: '5px', border: \"1px solid lightgray\" }} afterChange={onChange}>\r\n                {ThumbnailPaths && ThumbnailPaths.map((ThumbnailPath) => (\r\n                    <div>\r\n                        <img src={`http://localhost:5000/${ThumbnailPath}`} alt=\"thumbnail\" />\r\n                    </div>\r\n                ))\r\n                }\r\n            </Carousel>)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            <div style={{ position: 'fixed' }}>\r\n                <VideoLeftMenu selectedKey={'2'} />\r\n            </div>\r\n            {/* fixed를 위한 가드영역 */}\r\n            <div style={{ minWidth: '200px' }}>\r\n            </div>\r\n            <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n                <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                    <Title level={2}>Upload Video</Title>\r\n                </div>\r\n\r\n                <Form >\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        {/* 업로드파일 */}\r\n                        <Dropzone onDrop={onDrop}>\r\n                            {({ getRootProps, getInputProps }) => (\r\n                                <div style={{ width: '300px', height: '240px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }} {...getRootProps()}>\r\n                                    <input {...getInputProps()} />\r\n                                    <Icon type=\"plus\" style={{ fontSize: '3rem' }} />\r\n                                </div>\r\n                            )}\r\n                        </Dropzone>\r\n                        {/* 썸네일 */}\r\n                        <ThumbNail />\r\n                    </div>\r\n                    <br />\r\n                    <br />\r\n\r\n                    <VideoForm thumbNailIndex={thumbNailIndex} filePath={FilePath} ThumbnailPaths={ThumbnailPaths} duration={Duration} />\r\n                </Form>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default VideoUploadPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\n\r\nfunction SideVideo() {\r\n    const [SideVideos, setSideVideos] = useState([])\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/video/getVideos').then((res) => {\r\n            if (res.data.success) {\r\n                setSideVideos(res.data.videos)\r\n            } else {\r\n                alert('사이드 비디오정보를 가져오는데 실패하였습니다.')\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const renderSideVideo = SideVideos.map((video, index) => {\r\n        var minutes = Math.floor(video.duration / 60);\r\n        var seconds = Math.floor((video.duration - minutes * 60));\r\n\r\n        return (\r\n            <div key={index} style={{ display: 'flex', marginBottom: '1rem', padding: '2rem 2rem' }}>\r\n                <div style={{ width: '40%', marginRight: '1rem' }}>\r\n                    <a href={`http://localhost:3000/video/detail_${video._id}`}>\r\n                        <img style={{ width: '100%', height: '100%' }} src={`http://localhost:5000/${video.thumbnail}`} alt=\"thumbnail\" />\r\n                    </a>\r\n                </div>\r\n                <div style={{ width: '50%' }}>\r\n                    <a href={`http://localhost:3000/video/detail_${video._id}`}>\r\n                        <span style={{ fontSize: '1rem', color: 'black' }}> {video.title}</span><br />\r\n                        <span>{video.writer.name}</span><br />\r\n                        <span>{video.views}</span><br />\r\n                        <span>{minutes} : {seconds}</span>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <>\r\n            <div style={{ mairginTop: '3rem' }}>\r\n                {renderSideVideo}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SideVideo\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Tooltip, Icon } from 'antd';\r\nimport Axios from 'axios'\r\n\r\nfunction LikeDislikes(props) {\r\n    const [Likes, setLikes] = useState(0)\r\n    const [LikeAction, setLikeAction] = useState(null)\r\n    const [Dislikes, setDislikes] = useState(0)\r\n    const [DislikeAction, setDislikeAction] = useState(null)\r\n\r\n    let variable = {}\r\n\r\n    //비디오 좋아요> 디테일페이지이에서 프롭스 video 넘겨받음\r\n    if (props.video) {\r\n        variable = { videoId: props.videoId, userId: props.userId }\r\n    }\r\n    else {\r\n        variable = { commentId: props.commentId, userId: props.userId }\r\n    }\r\n\r\n    useEffect(() => {\r\n        //좋아요 정보 가져오기\r\n        Axios.post('/api/video/like/getLiked', variable).then(res => {\r\n            if (res.data.success) {\r\n                console.log(res.data)\r\n                //좋아요갯수\r\n                setLikes(res.data.likes.length);\r\n                //눌렀는지 확인\r\n                res.data.likes.map(like => {\r\n                    if (like.userId === props.userId) {\r\n                        setLikeAction('liked')\r\n                    }\r\n                })\r\n            } else {\r\n                alert('좋아요 정보를 가져오는데 실패하였습니다.')\r\n            }\r\n        })\r\n\r\n        // 싫어요 정보 가져오기\r\n        Axios.post('/api/video/like/getDisliked', variable).then(res => {\r\n            if (res.data.success) {\r\n                console.log(res.data)\r\n                //싫어요갯수\r\n                setDislikes(res.data.dislikes.length);\r\n                //눌렀는지 확인\r\n                res.data.dislikes.map(dislike => {\r\n                    if (dislike.userId === props.userId) {\r\n                        setDislikeAction('disliked')\r\n                    }\r\n                })\r\n            } else {\r\n                alert('싫어요 정보를 가져오는데 실패하였습니다.')\r\n            }\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    const onLike = () => {\r\n        //안눌러진 상태\r\n        if (LikeAction === null) {\r\n            Axios.post('/api/video/like/upLike', variable).then(res => {\r\n                if (res.data.success) {\r\n                    setLikes(Likes + 1)\r\n                    setLikeAction('liked')\r\n                    //좋아요를 눌렀으므로 싫어요가 눌러진 상태였다면 싫어요를 제거한다.\r\n                    if (DislikeAction !== null) {\r\n                        setDislikeAction(null)\r\n                        setDislikes(Dislikes - 1)\r\n                    }\r\n                }\r\n                else {\r\n                    alert('좋아요 실패')\r\n                }\r\n\r\n            })\r\n        } else { //좋아요가 눌러진 상태\r\n            Axios.post('/api/video/like/unLike', variable).then(res => {\r\n                if (res.data.success) {\r\n                    setLikes(Likes - 1)\r\n                    setLikeAction(null)\r\n                } else {\r\n                    alert('좋아요 제거 실패')\r\n                }\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const onDislike = () => {\r\n        //안눌러진 상태\r\n        if (DislikeAction === null) {\r\n            Axios.post('/api/video/like/upDislike', variable).then(res => {\r\n                if (res.data.success) {\r\n                    setDislikes(Dislikes + 1)\r\n                    setDislikeAction('disliked')\r\n                    //싫어요 눌렀으므로 좋아요가 눌러진 상태였다면 좋아요를 제거한다.\r\n                    if (LikeAction !== null) {\r\n                        setLikeAction(null)\r\n                        setLikes(Likes - 1)\r\n                    }\r\n                }\r\n                else {\r\n                    alert('싫어요 실패')\r\n                }\r\n\r\n            })\r\n        } else { //싫어요 눌러진 상태\r\n            Axios.post('/api/video/like/unDislike', variable).then(res => {\r\n                if (res.data.success) {\r\n                    setDislikes(Dislikes - 1)\r\n                    setDislikeAction(null)\r\n                } else {\r\n                    alert('싫어요 제거 실패')\r\n                }\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <span key=\"comment-basic-like\">\r\n                <Tooltip title=\"Like\">\r\n                    <Icon type=\"like\"\r\n                        theme={LikeAction === 'liked' ? \"filled\" : \"outlined\"}\r\n                        onClick={onLike}\r\n                    />\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}> {Likes} </span>\r\n            </span>\r\n\r\n            <span key=\"commet-basic-dislike\">\r\n                <Tooltip title=\"Dislike\">\r\n                    <Icon type=\"dislike\"\r\n                        theme={DislikeAction === 'disliked' ? \"filled\" : \"outlined\"}\r\n                        onClick={onDislike}\r\n                    />\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}> {Dislikes} </span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LikeDislikes","import React, { useState } from 'react'\r\nimport { Comment, Avatar, Button, Input } from 'antd'\r\nimport { useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport LikeDislikes from './LikeDislikes';\r\nimport moment from 'moment';\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction SingleComment(props) {\r\n    const user = useSelector(state => state.user)\r\n    const [OpenReply, setOpenReply] = useState(false)\r\n    const [CommentValue, setCommentValue] = useState('')\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const commentVariables = {\r\n            writer: user.userData._id,\r\n            content: CommentValue,\r\n            responseTo: props.comment._id,\r\n            postId: props.comment.postId\r\n        }\r\n\r\n        axios.post('/api/video/comment/saveComment', commentVariables).then(res => {\r\n            if (res.data.success) {\r\n                console.log(res.data)\r\n                setCommentValue('');\r\n                props.refreshFunction(res.data.result);\r\n                setOpenReply(false);\r\n            } else {\r\n                alert('코멘트 작성에 실패하였습니다.')\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const onHandleChange = (e) => {\r\n        setCommentValue(e.currentTarget.value)\r\n    }\r\n\r\n    const onClickReplyOpen = (e) => {\r\n        setOpenReply(!OpenReply)\r\n    }\r\n\r\n    const actions = [\r\n        <LikeDislikes userId={localStorage.getItem('userId')} commentId={props.comment._id} />, <div style={{ width: '20px', textAlign: 'center' }}>|</div>,\r\n        <span onClick={onClickReplyOpen} key=\"comment-basic-reply-to\">Reply to</span>\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <Comment\r\n                style={{ padding: '0px 0px' }}\r\n                datetime={moment(props.comment.createAt).format(\"MMM Do YY\")}\r\n                actions={actions}\r\n                author={props.comment.writer.name}\r\n                content={<p>{props.comment.content}</p>}\r\n                avatar={<Avatar src={props.comment.writer.image} />}\r\n            />\r\n\r\n            {OpenReply && <form style={{ display: 'flex' }} onSubmit={onSubmit}>\r\n                <TextArea\r\n                    style={{ width: '90%', marginLeft: '5px', borderRadius: '5px' }}\r\n                    onChange={onHandleChange}\r\n                    value={CommentValue}\r\n                    placeholder=\"코멘트를 작성해주세요\"\r\n                />\r\n                <Button style={{ height: '52px' }} size=\"large\" onClick={onSubmit}>Submit</Button>\r\n            </form>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComment\r\n","import React, { useEffect, useState } from 'react'\r\nimport SingleComment from './SingleComment';\r\nimport { EnterOutlined } from '@ant-design/icons'\r\n\r\nfunction ReplyComment(props) {\r\n    const [ChildCommentCount, setChildCommentCount] = useState(0);\r\n    const [OnToggle, setOnToggle] = useState(false);\r\n    useEffect(() => {\r\n        let commentCount = 0;\r\n        props.commentLists.map((comment) => {\r\n            if (comment.responseTo === props.parentCommentId)\r\n                commentCount++\r\n        }\r\n        )\r\n        setChildCommentCount(commentCount)\r\n    }, [props.commentLists])\r\n\r\n    const renderReplyComment = (parentCommentId) =>\r\n        props.commentLists.map((comment, index) => (\r\n            <React.Fragment>\r\n                {\r\n                    comment.responseTo === parentCommentId &&\r\n                    <div style={{ width: '80%', marginLeft: '40px' }}>\r\n                        <SingleComment\r\n                            refreshFunction={props.refreshFunction}\r\n                            key={index} comment={comment} postId={props.videoId} />\r\n                        <ReplyComment key={comment._id} refreshFunction={props.refreshFunction} commentLists={props.commentLists} postId={props.videoId} parentCommentId={comment._id} />\r\n                    </div>\r\n\r\n                }\r\n            </React.Fragment>\r\n        ))\r\n\r\n    const onToggle = (e) => {\r\n        setOnToggle(!OnToggle)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {ChildCommentCount > 0 &&\r\n                <p style={{ fontSize: '14px', margin: 0, color: 'gray', cursor: 'pointer' }} onClick={onToggle}>\r\n                    <EnterOutlined style={{ transform: 'scaleX(-1)' }} /> View {ChildCommentCount} more comment(s)\r\n                </p>\r\n            }\r\n\r\n            {OnToggle && renderReplyComment(props.parentCommentId)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplyComment\r\n","import Axios from 'axios';\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Comment, Button, Input } from 'antd'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SingleComment from './SingleComment';\r\nimport ReplyComment from './ReplyComment';\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction Comments(props) {\r\n    const user = useSelector(state => state.user)\r\n    const videoId = props.videoId;\r\n    const [CommentValue, setCommentValue] = useState('')\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (user.userData.isAuth) {\r\n            const commentVariables = {\r\n                content: CommentValue,\r\n                writer: user.userData._id,\r\n                postId: videoId,\r\n            }\r\n\r\n            console.log(user)\r\n\r\n            Axios.post('/api/video/comment/saveComment', commentVariables).then((res) => {\r\n                if (res.data.success) {\r\n                    console.log(res.data.result)\r\n                    setCommentValue('');\r\n                    props.refreshFunction(res.data.result)\r\n                } else {\r\n                    alert('코멘트 작성에 실패하였습니다.')\r\n                }\r\n            })\r\n        } else {\r\n            alert('로그인 후 코멘트를 작성해주세요.')\r\n            props.history.push('/login')\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setCommentValue(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <p> Replies</p>\r\n            <hr />\r\n            {props.comments && props.comments.map((comment, index) => (\r\n                (!comment.responseTo &&\r\n                    <>\r\n                        <SingleComment refreshFunction={props.refreshFunction} key={index} comment={comment} postId={videoId} />\r\n                        <ReplyComment refreshFunction={props.refreshFunction} key={comment._id + index} commentLists={props.comments} parentCommentId={comment._id} postId={videoId} />\r\n                        <hr />\r\n                    </>)\r\n            ))}\r\n\r\n\r\n            <form style={{ display: 'flex' }} onSubmit={onSubmit}>\r\n                <TextArea\r\n                    style={{ width: '100%', borderRadius: '5px' }}\r\n                    onChange={handleChange}\r\n                    value={CommentValue}\r\n                    placeholder=\"코멘트를 작성해주세요.\"\r\n\r\n                />\r\n                <br />\r\n                <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit}>Submit</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Comments)\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nfunction Subscribe(props) {\r\n    const [Subscribed, setSubscribed] = useState(false);\r\n    const [SubscribeNumber, setSubscribeNumber] = useState(0);\r\n    //userTo 게시자\r\n    //userFrom 사용자\r\n    useEffect(() => {\r\n        let variable = { userTo: props.userTo }\r\n\r\n        //구독자 수 정보\r\n        axios.post('/api/video/subscribe/subscribeNumber', variable).then(res => {\r\n            if (res.data.success) {\r\n                setSubscribeNumber(res.data.subscribeNumber)\r\n            } else {\r\n                alert('구독자 정보를 가져오는데 실패하였습니다.')\r\n            }\r\n        })\r\n\r\n        let subscribeVariable = { userTo: props.userTo, userFrom: props.userFrom }\r\n        //사용자의 구독정보\r\n        axios.post('/api/video/subscribe/subscribed', subscribeVariable).then(res => {\r\n            if (res.data.success) {\r\n                setSubscribed(res.data.subscribed)\r\n            } else {\r\n                alert('구독 정보를 가져오는데 실패하였습니다.')\r\n            }\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    const onSubscribe = (e) => {\r\n        let subscribeVariable = { userTo: props.userTo, userFrom: props.userFrom }\r\n\r\n        if (Subscribed) {\r\n            axios.post('/api/video/subscribe/unSubscribed', subscribeVariable).then(res => {\r\n                if (res.data.success) {\r\n                    console.log(res.data)\r\n                    setSubscribeNumber(SubscribeNumber - 1)\r\n                    setSubscribed(!Subscribed)\r\n                } else {\r\n                    alert('구독 취소에 실패하였습니다.')\r\n                }\r\n            })\r\n\r\n        } else {\r\n            axios.post('/api/video/subscribe/subscribe', subscribeVariable).then(res => {\r\n                if (res.data.success) {\r\n                    console.log(res.data)\r\n                    setSubscribeNumber(SubscribeNumber + 1)\r\n                    setSubscribed(!Subscribed)\r\n                }\r\n                else {\r\n                    alert('구독에 실패하였습니다.')\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                style={{ backgroundColor: `${Subscribed ? '#AAAAAA' : '#CC0000'}`, borderRadius: '4px', color: 'white', padding: '10px 16px', fontWeight: '500', fontSize: '1rem', textTransform: 'uppercase' }}\r\n                onClick={onSubscribe}\r\n            >\r\n                {SubscribeNumber} {Subscribed ? 'Subscribed' : 'Subscribe'}\r\n\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subscribe\r\n","import React, { useEffect, useState } from 'react'\r\nimport { List, Row, Col, Avatar } from 'antd'\r\nimport Axios from 'axios'\r\nimport VideoLeftMenu from '../Main/Section/VideoLeftMenu'\r\nimport SideVideo from './Section/SideVideo'\r\nimport Comments from './Section/Comments'\r\nimport Subscribe from './Section/Subscribe'\r\nimport LikeDislikes from './Section/LikeDislikes'\r\n\r\n\r\nfunction VideoDetailPage(props) {\r\n    const videoId = props.match.params.videoId\r\n    const variable = { videoId: videoId }\r\n\r\n    const [VideoDetail, setVideoDetail] = useState([])\r\n    const [Comment, setComment] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        Axios.post('/api/video/getVideoDetail', variable).then(res => {\r\n            if (res.data.success) {\r\n                setVideoDetail(res.data.videoDetail)\r\n            } else {\r\n                alert('비디오 정보를 가져오는데 실패하였습니다.')\r\n            }\r\n        })\r\n\r\n        Axios.post('/api/video/comment/getComment', variable).then(res => {\r\n            if (res.data.success) {\r\n                setComment(res.data.result)\r\n            } else {\r\n                alert('코멘트 목록을 가져오는데 실패하였습니다.')\r\n            }\r\n        })\r\n\r\n\r\n    }, [])\r\n\r\n    const refreshFunction = (newComments) => {\r\n        setComment(Comment.concat(newComments))\r\n    }\r\n\r\n\r\n    if (VideoDetail.writer) {\r\n        const subscribeButton = VideoDetail.writer._id !== localStorage.getItem('userId') && <Subscribe userTo={VideoDetail.writer._id} userFrom={localStorage.getItem('userId')} />\r\n\r\n        return (\r\n\r\n            <div style={{ display: 'flex' }}>\r\n                <div style={{ position: 'fixed' }}>\r\n                    <VideoLeftMenu />\r\n                </div>\r\n                {/* fixed를 위한 가드영역 */}\r\n                <div style={{ minWidth: '200px' }}>\r\n                </div>\r\n                <Row gutter={[16, 16]}>\r\n                    <Col lg={18} xs={24}>\r\n                        <div style={{ width: '100%', padding: '3rem 4rem' }}>\r\n                            <video style={{ width: '100%' }} src={`http://localhost:5000/${VideoDetail.filePath}`} controls />\r\n                            <List.Item\r\n                                actions={[<div>{VideoDetail.writer.name}</div>, <LikeDislikes video userId={localStorage.getItem('userId')} videoId={videoId} />, subscribeButton]}\r\n                            >\r\n                                <List.Item.Meta\r\n                                    avatar={<Avatar src={VideoDetail.writer.image} />}\r\n                                    title={VideoDetail.title}\r\n                                    description={VideoDetail.description} />\r\n                            </List.Item>\r\n\r\n                            {/* comments */}\r\n                            <Comments refreshFunction={refreshFunction} videoId={videoId} comments={Comment} />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6} xs={24}>\r\n                        <SideVideo />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>Loading...</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VideoDetailPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport VideoLeftMenu from '../Main/Section/VideoLeftMenu'\r\nimport { List, Avatar, Space } from 'antd';\r\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\r\nimport Axios from 'axios'\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction FavoriteVideo() {\r\n    const [favoriteVideo, setFavoriteVideo] = useState([])\r\n    const [LikeNumber, setLikeNumber] = useState([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/video/getFavoriteVideo', { userId: localStorage.getItem('userId') }).then(res => {\r\n            if (res.data.success) {\r\n                let favoriteVideos = [];\r\n                let likes = [];\r\n                let mergedList = [];\r\n                favoriteVideos = res.data.likeList;\r\n                Axios.post('/api/video/getLikeCount').then(res => {\r\n                    if (res.data.success) {\r\n                        likes = res.data.countList\r\n                        mergedList = favoriteVideos.map((video) => {\r\n                            let obj = likes.find((item) => {\r\n                                return video.videoId._id === item._id.videoId\r\n                            })\r\n                            video.videoId.likeCount = obj.count\r\n                            return video\r\n                        })\r\n                        setFavoriteVideo(mergedList)\r\n                    } else {\r\n                        alert('데이터를 가져오는데 실패하였습니다')\r\n                    }\r\n                })\r\n\r\n            } else {\r\n                alert('비디오 정보를 가져오는데 실패하였습니다.')\r\n            }\r\n        })\r\n\r\n\r\n    }, [])\r\n\r\n    const IconText = ({ icon, text }) => (\r\n        <div>\r\n            {React.createElement(icon)}\r\n            {text}\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n    const RenderList = () => {\r\n        if (favoriteVideo) {\r\n            return <div style={{ width: '90%', margin: '0 auto' }}>\r\n                <List\r\n                    itemLayout=\"vertical\"\r\n                    size=\"large\"\r\n                    dataSource={favoriteVideo}\r\n                    footer={<div>more..</div>}\r\n                    renderItem={item => (\r\n                        <List.Item\r\n                            key={item.title}\r\n                            actions={[\r\n                                <IconText icon={LikeOutlined} text={item.videoId.likeCount} key=\"list-vertical-like-o\" />,\r\n                                <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\" />,\r\n                            ]}\r\n                            extra={\r\n                                <img\r\n                                    width={272}\r\n                                    alt=\"logo\"\r\n                                    src={`http://localhost:5000/${item.videoId.thumbnail}`}\r\n                                />\r\n                            }\r\n                        >\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src={item.videoId.writer.image} />}\r\n                                title={<a href={`/video/detail_${item.videoId._id}`}>{item.videoId.title}</a>}\r\n                                description={item.videoId.writer.email}\r\n                            />\r\n                            {item.videoId.description}\r\n                            <div style={{ minHeight: \"70px\" }}></div>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n        } else {\r\n            return <div>Loading...</div>\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div style={{ display: 'flex' }}>\r\n            <div style={{ position: 'fixed' }}>\r\n                <VideoLeftMenu selectedKey={'3'} />\r\n            </div>\r\n            {/* fixed를 위한 영역가드 */}\r\n            <div style={{ minWidth: '200px' }}>\r\n            </div>\r\n            <div style={{ width: '85%', margin: '3rem auto' }}>\r\n                <h2> Favorite Videos</h2>\r\n                <hr />\r\n                <RenderList />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoriteVideo\r\n","import {\r\n    SAVE_MESSAGE, CLEAR_MESSAGE\r\n} from './types';\r\n\r\nexport function saveMessage(dataToSubmit) {\r\n    return {\r\n        type: SAVE_MESSAGE,\r\n        payload: dataToSubmit\r\n    }\r\n}\r\n\r\nexport function clearMessage() {\r\n    return {\r\n        type: CLEAR_MESSAGE\r\n    }\r\n}","import React from 'react'\r\nimport { List, Icon, Avatar } from 'antd';\r\n\r\n\r\nfunction Message(props) {\r\n    const AvatarSrc = props.who === 'bot' ? <Icon type=\"robot\" /> : <Icon type=\"smile\" />\r\n\r\n    return (\r\n        <List.Item style={{ padding: '1rem' }}>\r\n            <List.Item.Meta\r\n                avatar={<Avatar icon={AvatarSrc} />}\r\n                title={props.who}\r\n                description={props.text}\r\n            />\r\n        </List.Item>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","\r\nimport React from 'react'\r\nimport { Card, Icon } from 'antd';\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction CardComponent(props) {\r\n    return (\r\n        <Card\r\n            style={{ width: 300, }}\r\n            cover={\r\n                <img\r\n                    alt={props.cardInfo.fields.description.stringValue}\r\n                    src={props.cardInfo.fields.image.stringValue} />\r\n            }\r\n            actions={[\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.cardInfo.fields.link.stringValue}>\r\n                    <Icon type=\"ellipsis\" key=\"ellipsis\" />\r\n                </a>\r\n            ]}\r\n        >\r\n            <Meta\r\n                title={props.cardInfo.fields.stack.stringValue}\r\n                description={props.cardInfo.fields.description.stringValue}\r\n            />\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CardComponent","import Axios from 'axios'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveMessage, clearMessage } from '../../../_actions/message_action'\r\nimport { List, Icon, Avatar } from 'antd';\r\nimport Message from './Message';\r\nimport Card from './Card';\r\n\r\n\r\nfunction Chatbot() {\r\n    const dispatch = useDispatch([]);\r\n    const savedMessages = useSelector(state => state.messages.messages)\r\n\r\n    useEffect(() => {\r\n        eventQuery('welcomToMyWebsite')\r\n    }, [])\r\n\r\n    const textQuery = async (text) => {\r\n        // step 1, Need to take care of the message I sent\r\n        let conversation = {\r\n            who: 'user',\r\n            content: {\r\n                text: {\r\n                    text: text\r\n                }\r\n            }\r\n        }\r\n\r\n        dispatch(saveMessage(conversation))\r\n\r\n\r\n        // step 2, We need to take care of the message Chatbot sent\r\n        const textQueryVariables = {\r\n            text\r\n        }\r\n\r\n        try {\r\n            // I will send request to the Query\r\n            const response = await Axios.post('api/chatbot/dialogflow/textQuery', textQueryVariables)\r\n\r\n            for (let content of response.data.fulfillmentMessages) {\r\n                conversation = {\r\n                    who: 'bot',\r\n                    content: content\r\n                }\r\n                dispatch(saveMessage(conversation))\r\n\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            conversation = {\r\n                who: 'user',\r\n                content: {\r\n                    text: {\r\n                        text: \" Error just occured, please check the problem\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            dispatch(saveMessage(conversation))\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const eventQuery = async (event) => {\r\n\r\n        const eventQueryVariables = {\r\n            event\r\n        }\r\n\r\n        try {\r\n            // I will send request to the Query\r\n            const response = await Axios.post('api/chatbot/dialogflow/eventQuery', eventQueryVariables)\r\n\r\n            for (let content of response.data.fulfillmentMessages) {\r\n                let conversation = {\r\n                    who: 'bot',\r\n                    content: content\r\n                }\r\n                dispatch(saveMessage(conversation))\r\n\r\n            }\r\n\r\n        } catch (error) {\r\n            let conversation = {\r\n                who: 'user',\r\n                content: {\r\n                    text: {\r\n                        text: \" Error just occured, please check the problem\"\r\n                    }\r\n                }\r\n            }\r\n            dispatch(saveMessage(conversation))\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const keyPressHandler = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            if (!e.target.value) {\r\n                return alert('you need to type something first')\r\n            }\r\n\r\n            //we will send request to text query route\r\n            textQuery(e.target.value)\r\n\r\n            e.target.value = \"\";\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const renderCards = (cards) => {\r\n        return cards.map((card, i) => <Card key={i} cardInfo={card.structValue} />)\r\n\r\n    }\r\n\r\n    const renderOneMessage = (message, i) => {\r\n        console.log('message', message)\r\n\r\n        //we need to give some condition here to seperate message kinds\r\n        if (message.content && message.content.text && message.content.text.text) {\r\n            //templete for normal text\r\n            return <Message key={i} who={message.who} text={message.content.text.text} />//return <Message key={i} who={message.who} text={message.content.text.text} />\r\n        }\r\n        else if (message.content && message.content.payload.fields.card) {\r\n            const AvatarSrc = message.who === 'bot' ? <Icon type=\"robot\" /> : <Icon type=\"smile\" />\r\n            return <div>\r\n                <List.Item style={{ padding: '1rem', display: 'flex', overflowX: 'scroll' }}>\r\n                    <List.Item.Meta\r\n                        avatar={<Avatar icon={AvatarSrc} />}\r\n                        title={message.who}\r\n                        description={renderCards(message.content.payload.fields.card.listValue.values)}\r\n                    />\r\n                </List.Item>\r\n\r\n\r\n            </div>\r\n            //templete for card message\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const renderMessage = (savedMessages) => {\r\n        if (savedMessages) {\r\n            return savedMessages.map((message, i) => {\r\n                return renderOneMessage(message, i);\r\n            })\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            height: 700, width: 700, border: '3px solid black', borderRadius: '7px'\r\n        }}>\r\n            <div style={{ height: 644, width: '100%', overflow: 'auto' }}>\r\n                {renderMessage(savedMessages)}\r\n            </div>\r\n\r\n            <input\r\n                style={{\r\n                    margin: 0, width: '100%', height: 50,\r\n                    borderRadius: '5px', padding: '5px', fontSize: '1rem'\r\n                }}\r\n                placeholder=\"Send a message...\"\r\n                onKeyPress={keyPressHandler}\r\n                type=\"text\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chatbot\r\n","import React from 'react'\r\nimport { Typography, Icon } from 'antd'\r\nimport Chatbot from './Section/Chatbot';\r\nconst { Title } = Typography;\r\n\r\n\r\nfunction ChatbotPage() {\r\n    return (\r\n        <div>\r\n            <div style={{ display: 'flex', justifyContent: 'center', marginTop: '2rem' }}>\r\n                <Title level={2} > CHAT BOT APP&nbsp;<Icon type=\"robot\" /></Title>\r\n            </div>\r\n            <hr style={{ width: '80%' }} />\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Chatbot />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatbotPage\r\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport IntroPage from './views/IntroPage/IntroPage';\nimport MovieMainPage from './MovieApp/Main/MovieMainPage';\nimport MovieDetail from './MovieApp/Detail/MovieDetail';\nimport FavoritePage from './MovieApp/FavoriteMovie/FavoritePage';\nimport VideoMainPage from './VideoApp/Main/VideoMainPage';\nimport VideoUploadPage from './VideoApp/UploadPage/VideoUploadPage';\nimport VideoDetailPage from './VideoApp/VideoDetailPage/VideoDetailPage';\nimport FavoriteVideo from './VideoApp/FavoriteVideo/FavoriteVideo';\nimport ChatbotPage from './ChatbotApp/ChatbotPage';\n\n//null   Anyone Can go inside\n//true   only logged in user can go inside\n//false  logged in user can't go inside\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route exact path=\"/Intro\" component={Auth(IntroPage, null)} />\n          {/* 프로젝트\n          무비앱 */}\n          <Route exact path=\"/MovieApp\" component={Auth(MovieMainPage, null)} />\n          <Route exact path=\"/movie/detail_:movieId\" component={Auth(MovieDetail, null)} />\n          <Route exact path=\"/movie/favorite\" component={Auth(FavoritePage, null)} />\n          {/* 프로젝트 비디오앱 */}\n          <Route exact path=\"/VideoApp\" component={Auth(VideoMainPage, null)} />\n          <Route exact path=\"/video/videoupload\" component={Auth(VideoUploadPage, true)} />\n          <Route exact path=\"/video/detail_:videoId\" component={Auth(VideoDetailPage, null)} />\n          <Route exact path=\"/video/favoritevideo\" component={Auth(FavoriteVideo, true)} />\n          {/* 챗봇 */}\n          <Route exact path=\"/chatbot\" component={Auth(ChatbotPage, null)} />\n        </Switch>\n      </div>\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\nimport messages from './message_reducer';\n\nconst rootReducer = combineReducers({\n    messages, user,\n});\n\nexport default rootReducer;","import {\r\n    CLEAR_MESSAGE,\r\n    SAVE_MESSAGE\r\n} from '../_actions/types';\r\n\r\n\r\n\r\n\r\nexport default function (state = { messages: [] }, action) {\r\n    switch (action.type) {\r\n        case SAVE_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: state.messages.concat(action.payload)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case REGISTER_USER:\n            return { ...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return { ...state, userData: action.payload }\n        case LOGOUT_USER:\n            return { ...state }\n        default:\n            return state;\n    }\n}\n\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}